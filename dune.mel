;;;;{BSB GENERATED: NO EDIT
(subdir ./node_modules/bisect_ppx/src/runtime/js
(rule
(targets  jest.ast)
 (deps (:inputs  jest.ml) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  jest.d)
 (deps (:inputs  ../../.././src/runtime/js/jest.ast) )
(action (run meldep -cwd ./src/runtime/js -root /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  jest-Bisect.cmj jest-Bisect.cmi jest-Bisect.cmt jest.bs.js)
 (deps (:inputs  jest.ast)  (include jest.d) ../../../bsconfig.json ../../../.melange.eobjs/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I ../../common -I . -I ../../../.melange.eobjs   -w a -bs-package-name bisect_ppx -bs-package-output es6:./src/runtime/js:.bs.js -o jest-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.ast)
 (deps (:inputs  runtime.ml) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.d)
 (deps (:inputs  ../../.././src/runtime/js/runtime.ast ../../.././src/runtime/js/runtime.iast) )
(action (run meldep -cwd ./src/runtime/js -root /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime.iast)
 (deps (:inputs  runtime.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime-Bisect.cmi runtime-Bisect.cmti)
 (deps (:inputs  runtime.iast)  (include runtime.d) ../../../bsconfig.json ../../../.melange.eobjs/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I ../../common -I . -I ../../../.melange.eobjs   -w a -o runtime-Bisect.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  runtime-Bisect.cmj runtime-Bisect.cmt runtime.bs.js)
 (deps (:inputs  runtime.ast)  runtime-Bisect.cmi (include runtime.d) ../../../bsconfig.json ../../../.melange.eobjs/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -bs-read-cmi -I ../../common -I . -I ../../../.melange.eobjs   -w a -bs-package-name bisect_ppx -bs-package-output es6:./src/runtime/js:.bs.js -o runtime-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  runtime.bs.js jest.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/bisect_ppx/src/common
(rule
(targets  bisect_common.ast)
 (deps (:inputs  bisect_common.ml) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common.d)
 (deps (:inputs  ../.././src/common/bisect_common.ast ../.././src/common/bisect_common.iast) )
(action (run meldep -cwd ./src/common -root /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx  -bs-ns Bisect %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common.iast)
 (deps (:inputs  bisect_common.mli) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common-Bisect.cmi bisect_common-Bisect.cmti)
 (deps (:inputs  bisect_common.iast)  (include bisect_common.d) ../../bsconfig.json ../../.melange.eobjs/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -I . -I ../runtime/js -I ../../.melange.eobjs   -w a -o bisect_common-Bisect.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  bisect_common-Bisect.cmj bisect_common-Bisect.cmt bisect_common.bs.js)
 (deps (:inputs  bisect_common.ast)  bisect_common-Bisect.cmi (include bisect_common.d) ../../bsconfig.json ../../.melange.eobjs/Bisect.cmi)
(action
  (run melc -bs-ns Bisect -bs-read-cmi -I . -I ../runtime/js -I ../../.melange.eobjs   -w a -bs-package-name bisect_ppx -bs-package-output es6:./src/common:.bs.js -o bisect_common-Bisect.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  bisect_common.bs.js)
(enabled_if %{bin-available:melc})))

(subdir ./node_modules/bisect_ppx/.melange.eobjs(rule
(targets  Bisect.cmi)
 (deps (:inputs  Bisect.mlmap) )
(action (run melc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir ./node_modules/bisect_ppx(data_only_dirs .melange.eobjs))
(subdir ./node_modules/bisect_ppx/.melange.eobjs)

(subdir ./node_modules/bs-bastet/bastet_js/src
(rule
(targets  Date.ast)
 (deps (:inputs  Date.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Date.d)
 (deps (:inputs  ../.././bastet_js/src/Date.ast) )
(action (run meldep -cwd ./bastet_js/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Date-BsBastet.cmj Date-BsBastet.cmi Date-BsBastet.cmt Date.bs.js)
 (deps (:inputs  Date.ast)  (include Date.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I ../../bastet/src -I . -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet_js/src:.bs.js -o Date-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict.ast)
 (deps (:inputs  Dict.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict.d)
 (deps (:inputs  ../.././bastet_js/src/Dict.ast) )
(action (run meldep -cwd ./bastet_js/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dict-BsBastet.cmj Dict-BsBastet.cmi Dict-BsBastet.cmt Dict.bs.js)
 (deps (:inputs  Dict.ast)  (include Dict.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I ../../bastet/src -I . -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet_js/src:.bs.js -o Dict-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray.ast)
 (deps (:inputs  JsArray.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray.d)
 (deps (:inputs  ../.././bastet_js/src/JsArray.ast) )
(action (run meldep -cwd ./bastet_js/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsArray-BsBastet.cmj JsArray-BsBastet.cmi JsArray-BsBastet.cmt JsArray.bs.js)
 (deps (:inputs  JsArray.ast)  (include JsArray.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I ../../bastet/src -I . -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet_js/src:.bs.js -o JsArray-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat.ast)
 (deps (:inputs  JsFloat.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat.d)
 (deps (:inputs  ../.././bastet_js/src/JsFloat.ast) )
(action (run meldep -cwd ./bastet_js/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  JsFloat-BsBastet.cmj JsFloat-BsBastet.cmi JsFloat-BsBastet.cmt JsFloat.bs.js)
 (deps (:inputs  JsFloat.ast)  (include JsFloat.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I ../../bastet/src -I . -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet_js/src:.bs.js -o JsFloat-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise.ast)
 (deps (:inputs  Promise.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise.d)
 (deps (:inputs  ../.././bastet_js/src/Promise.ast) )
(action (run meldep -cwd ./bastet_js/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Promise-BsBastet.cmj Promise-BsBastet.cmi Promise-BsBastet.cmt Promise.bs.js)
 (deps (:inputs  Promise.ast)  (include Promise.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I ../../bastet/src -I . -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet_js/src:.bs.js -o Promise-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Promise.bs.js JsFloat.bs.js JsArray.bs.js Dict.bs.js Date.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/bs-bastet/bastet/src
(rule
(targets  Int.ast)
 (deps (:inputs  Int.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Int.d)
 (deps (:inputs  ../.././bastet/src/Int.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Int-BsBastet.cmj Int-BsBastet.cmi Int-BsBastet.cmt Int.bs.js)
 (deps (:inputs  Int.ast)  (include Int.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Int-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool.ast)
 (deps (:inputs  Bool.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool.d)
 (deps (:inputs  ../.././bastet/src/Bool.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Bool-BsBastet.cmj Bool-BsBastet.cmi Bool-BsBastet.cmt Bool.bs.js)
 (deps (:inputs  Bool.ast)  (include Bool.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Bool-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual.ast)
 (deps (:inputs  Dual.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual.d)
 (deps (:inputs  ../.././bastet/src/Dual.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Dual-BsBastet.cmj Dual-BsBastet.cmi Dual-BsBastet.cmt Dual.bs.js)
 (deps (:inputs  Dual.ast)  (include Dual.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Dual-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo.ast)
 (deps (:inputs  Endo.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo.d)
 (deps (:inputs  ../.././bastet/src/Endo.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Endo-BsBastet.cmj Endo-BsBastet.cmi Endo-BsBastet.cmt Endo.bs.js)
 (deps (:inputs  Endo.ast)  (include Endo.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Endo-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List.ast)
 (deps (:inputs  List.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List.d)
 (deps (:inputs  ../.././bastet/src/List.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  List-BsBastet.cmj List-BsBastet.cmi List-BsBastet.cmt List.bs.js)
 (deps (:inputs  List.ast)  (include List.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o List-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test.ast)
 (deps (:inputs  Test.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test.d)
 (deps (:inputs  ../.././bastet/src/Test.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Test-BsBastet.cmj Test-BsBastet.cmi Test-BsBastet.cmt Test.bs.js)
 (deps (:inputs  Test.ast)  (include Test.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Test-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.ast)
 (deps (:inputs  Array.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.d)
 (deps (:inputs  ../.././bastet/src/Array.ast ../.././bastet/src/Array.iast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array.iast)
 (deps (:inputs  Array.rei) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array-BsBastet.cmi Array-BsBastet.cmti)
 (deps (:inputs  Array.iast)  (include Array.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -o Array-BsBastet.cmi %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Array-BsBastet.cmj Array-BsBastet.cmt Array.bs.js)
 (deps (:inputs  Array.ast)  Array-BsBastet.cmi (include Array.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-read-cmi -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Array-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float.ast)
 (deps (:inputs  Float.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float.d)
 (deps (:inputs  ../.././bastet/src/Float.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Float-BsBastet.cmj Float-BsBastet.cmi Float-BsBastet.cmt Float.bs.js)
 (deps (:inputs  Float.ast)  (include Float.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Float-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix.ast)
 (deps (:inputs  Infix.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix.d)
 (deps (:inputs  ../.././bastet/src/Infix.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Infix-BsBastet.cmj Infix-BsBastet.cmi Infix-BsBastet.cmt Infix.bs.js)
 (deps (:inputs  Infix.ast)  (include Infix.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Infix-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple.ast)
 (deps (:inputs  Tuple.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple.d)
 (deps (:inputs  ../.././bastet/src/Tuple.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Tuple-BsBastet.cmj Tuple-BsBastet.cmi Tuple-BsBastet.cmt Tuple.bs.js)
 (deps (:inputs  Tuple.ast)  (include Tuple.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Tuple-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF.ast)
 (deps (:inputs  ArrayF.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF.d)
 (deps (:inputs  ../.././bastet/src/ArrayF.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  ArrayF-BsBastet.cmj ArrayF-BsBastet.cmi ArrayF-BsBastet.cmt ArrayF.bs.js)
 (deps (:inputs  ArrayF.ast)  (include ArrayF.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o ArrayF-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option.ast)
 (deps (:inputs  Option.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option.d)
 (deps (:inputs  ../.././bastet/src/Option.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Option-BsBastet.cmj Option-BsBastet.cmi Option-BsBastet.cmt Option.bs.js)
 (deps (:inputs  Option.ast)  (include Option.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Option-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result.ast)
 (deps (:inputs  Result.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result.d)
 (deps (:inputs  ../.././bastet/src/Result.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Result-BsBastet.cmj Result-BsBastet.cmi Result-BsBastet.cmt Result.bs.js)
 (deps (:inputs  Result.ast)  (include Result.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Result-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String.ast)
 (deps (:inputs  String.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String.d)
 (deps (:inputs  ../.././bastet/src/String.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  String-BsBastet.cmj String-BsBastet.cmi String-BsBastet.cmt String.bs.js)
 (deps (:inputs  String.ast)  (include String.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o String-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify.ast)
 (deps (:inputs  Verify.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify.d)
 (deps (:inputs  ../.././bastet/src/Verify.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Verify-BsBastet.cmj Verify-BsBastet.cmi Verify-BsBastet.cmt Verify.bs.js)
 (deps (:inputs  Verify.ast)  (include Verify.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Verify-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default.ast)
 (deps (:inputs  Default.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default.d)
 (deps (:inputs  ../.././bastet/src/Default.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Default-BsBastet.cmj Default-BsBastet.cmi Default-BsBastet.cmt Default.bs.js)
 (deps (:inputs  Default.ast)  (include Default.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Default-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let.ast)
 (deps (:inputs  PPX_Let.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let.d)
 (deps (:inputs  ../.././bastet/src/PPX_Let.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  PPX_Let-BsBastet.cmj PPX_Let-BsBastet.cmi PPX_Let-BsBastet.cmt PPX_Let.bs.js)
 (deps (:inputs  PPX_Let.ast)  (include PPX_Let.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o PPX_Let-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function.ast)
 (deps (:inputs  Function.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function.d)
 (deps (:inputs  ../.././bastet/src/Function.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Function-BsBastet.cmj Function-BsBastet.cmi Function-BsBastet.cmt Function.bs.js)
 (deps (:inputs  Function.ast)  (include Function.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Function-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors.ast)
 (deps (:inputs  Functors.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors.d)
 (deps (:inputs  ../.././bastet/src/Functors.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functors-BsBastet.cmj Functors-BsBastet.cmi Functors-BsBastet.cmt Functors.bs.js)
 (deps (:inputs  Functors.ast)  (include Functors.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Functors-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions.ast)
 (deps (:inputs  Functions.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions.d)
 (deps (:inputs  ../.././bastet/src/Functions.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Functions-BsBastet.cmj Functions-BsBastet.cmi Functions-BsBastet.cmt Functions.bs.js)
 (deps (:inputs  Functions.ast)  (include Functions.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Functions-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface.ast)
 (deps (:inputs  Interface.re) )
(action
 (run melc  -w a -ppx /mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface.d)
 (deps (:inputs  ../.././bastet/src/Interface.ast) )
(action (run meldep -cwd ./bastet/src -root /mnt/c/git/hackerrank-melange/node_modules/bs-bastet  -bs-ns BsBastet %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Interface-BsBastet.cmj Interface-BsBastet.cmi Interface-BsBastet.cmt Interface.bs.js)
 (deps (:inputs  Interface.ast)  (include Interface.d) ../../bsconfig.json ../../.melange.eobjs/BsBastet.cmi(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world))
(action
  (run melc -bs-ns BsBastet -bs-re-out -I . -I ../../bastet_js/src -I ../../.melange.eobjs -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common   -w a -bs-package-name bs-bastet -bs-package-output es6:./bastet/src:.bs.js -o Interface-BsBastet.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Interface.bs.js Functions.bs.js Functors.bs.js Function.bs.js PPX_Let.bs.js Default.bs.js Verify.bs.js String.bs.js Result.bs.js Option.bs.js ArrayF.bs.js Tuple.bs.js Infix.bs.js Float.bs.js Array.bs.js Test.bs.js List.bs.js Endo.bs.js Dual.bs.js Bool.bs.js Int.bs.js)
(enabled_if %{bin-available:melc})))

(subdir ./node_modules/bs-bastet/.melange.eobjs(rule
(targets  BsBastet.cmi)
 (deps (:inputs  BsBastet.mlmap) )
(action (run melc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if %{bin-available:melc}) )
 )
(subdir ./node_modules/bs-bastet(data_only_dirs .melange.eobjs))
(subdir ./node_modules/bs-bastet/.melange.eobjs)

(subdir ./node_modules/relude/src
(dirs :standard array extensions ior js list option)
(rule
(targets  Relude.ast)
 (deps (:inputs  Relude.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude.d)
 (deps (:inputs  .././src/Relude.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude.cmj Relude.cmi Relude.cmt Relude.bs.js)
 (deps (:inputs  Relude.ast)  (include Relude.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.ast)
 (deps (:inputs  Relude_Eq.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.d)
 (deps (:inputs  .././src/Relude_Eq.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Eq.cmj Relude_Eq.cmi Relude_Eq.cmt Relude_Eq.bs.js)
 (deps (:inputs  Relude_Eq.ast)  (include Relude_Eq.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Eq.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.ast)
 (deps (:inputs  Relude_IO.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.d)
 (deps (:inputs  .././src/Relude_IO.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_IO.cmj Relude_IO.cmi Relude_IO.cmt Relude_IO.bs.js)
 (deps (:inputs  Relude_IO.ast)  (include Relude_IO.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_IO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.ast)
 (deps (:inputs  Relude_Int.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.d)
 (deps (:inputs  .././src/Relude_Int.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Int.cmj Relude_Int.cmi Relude_Int.cmt Relude_Int.bs.js)
 (deps (:inputs  Relude_Int.ast)  (include Relude_Int.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Int.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.ast)
 (deps (:inputs  Relude_Ior.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.d)
 (deps (:inputs  .././src/Relude_Ior.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior.cmj Relude_Ior.cmi Relude_Ior.cmt Relude_Ior.bs.js)
 (deps (:inputs  Relude_Ior.ast)  (include Relude_Ior.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Ior.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.ast)
 (deps (:inputs  Relude_Map.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.d)
 (deps (:inputs  .././src/Relude_Map.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Map.cmj Relude_Map.cmi Relude_Map.cmt Relude_Map.bs.js)
 (deps (:inputs  Relude_Map.ast)  (include Relude_Map.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Map.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.ast)
 (deps (:inputs  Relude_Ord.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.d)
 (deps (:inputs  .././src/Relude_Ord.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ord.cmj Relude_Ord.cmi Relude_Ord.cmt Relude_Ord.bs.js)
 (deps (:inputs  Relude_Ord.ast)  (include Relude_Ord.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Ord.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.ast)
 (deps (:inputs  Relude_RIO.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.d)
 (deps (:inputs  .././src/Relude_RIO.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RIO.cmj Relude_RIO.cmi Relude_RIO.cmt Relude_RIO.bs.js)
 (deps (:inputs  Relude_RIO.ast)  (include Relude_RIO.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_RIO.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.ast)
 (deps (:inputs  Relude_Set.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.d)
 (deps (:inputs  .././src/Relude_Set.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Set.cmj Relude_Set.cmi Relude_Set.cmt Relude_Set.bs.js)
 (deps (:inputs  Relude_Set.ast)  (include Relude_Set.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Set.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.ast)
 (deps (:inputs  Relude_Bool.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.d)
 (deps (:inputs  .././src/Relude_Bool.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Bool.cmj Relude_Bool.cmi Relude_Bool.cmt Relude_Bool.bs.js)
 (deps (:inputs  Relude_Bool.ast)  (include Relude_Bool.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Bool.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.ast)
 (deps (:inputs  Relude_Free.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.d)
 (deps (:inputs  .././src/Relude_Free.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free.cmj Relude_Free.cmi Relude_Free.cmt Relude_Free.bs.js)
 (deps (:inputs  Relude_Free.ast)  (include Relude_Free.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Free.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.ast)
 (deps (:inputs  Relude_HMap.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.d)
 (deps (:inputs  .././src/Relude_HMap.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HMap.cmj Relude_HMap.cmi Relude_HMap.cmt Relude_HMap.bs.js)
 (deps (:inputs  Relude_HMap.ast)  (include Relude_HMap.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_HMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.ast)
 (deps (:inputs  Relude_List.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.d)
 (deps (:inputs  .././src/Relude_List.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List.cmj Relude_List.cmi Relude_List.cmt Relude_List.bs.js)
 (deps (:inputs  Relude_List.ast)  (include Relude_List.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_List.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.ast)
 (deps (:inputs  Relude_RWST.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.d)
 (deps (:inputs  .././src/Relude_RWST.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_RWST.cmj Relude_RWST.cmi Relude_RWST.cmt Relude_RWST.bs.js)
 (deps (:inputs  Relude_RWST.ast)  (include Relude_RWST.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_RWST.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.ast)
 (deps (:inputs  Relude_Tree.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.d)
 (deps (:inputs  .././src/Relude_Tree.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tree.cmj Relude_Tree.cmi Relude_Tree.cmt Relude_Tree.bs.js)
 (deps (:inputs  Relude_Tree.ast)  (include Relude_Tree.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tree.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.ast)
 (deps (:inputs  Relude_Unit.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.d)
 (deps (:inputs  .././src/Relude_Unit.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unit.cmj Relude_Unit.cmi Relude_Unit.cmt Relude_Unit.bs.js)
 (deps (:inputs  Relude_Unit.ast)  (include Relude_Unit.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Unit.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.ast)
 (deps (:inputs  Relude_Void.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.d)
 (deps (:inputs  .././src/Relude_Void.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Void.cmj Relude_Void.cmi Relude_Void.cmt Relude_Void.bs.js)
 (deps (:inputs  Relude_Void.ast)  (include Relude_Void.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Void.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.ast)
 (deps (:inputs  Relude_Array.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.d)
 (deps (:inputs  .././src/Relude_Array.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array.cmj Relude_Array.cmi Relude_Array.cmt Relude_Array.bs.js)
 (deps (:inputs  Relude_Array.ast)  (include Relude_Array.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Array.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.ast)
 (deps (:inputs  Relude_ContT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.d)
 (deps (:inputs  .././src/Relude_ContT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ContT.cmj Relude_ContT.cmi Relude_ContT.cmt Relude_ContT.bs.js)
 (deps (:inputs  Relude_ContT.ast)  (include Relude_ContT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_ContT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.ast)
 (deps (:inputs  Relude_Float.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.d)
 (deps (:inputs  .././src/Relude_Float.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Float.cmj Relude_Float.cmi Relude_Float.cmt Relude_Float.bs.js)
 (deps (:inputs  Relude_Float.ast)  (include Relude_Float.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Float.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.ast)
 (deps (:inputs  Relude_HList.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.d)
 (deps (:inputs  .././src/Relude_HList.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_HList.cmj Relude_HList.cmi Relude_HList.cmt Relude_HList.bs.js)
 (deps (:inputs  Relude_HList.ast)  (include Relude_HList.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_HList.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.ast)
 (deps (:inputs  Relude_Timer.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.d)
 (deps (:inputs  .././src/Relude_Timer.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Timer.cmj Relude_Timer.cmi Relude_Timer.cmt Relude_Timer.bs.js)
 (deps (:inputs  Relude_Timer.ast)  (include Relude_Timer.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Timer.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.ast)
 (deps (:inputs  Relude_Tuple.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.d)
 (deps (:inputs  .././src/Relude_Tuple.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple.cmj Relude_Tuple.cmi Relude_Tuple.cmt Relude_Tuple.bs.js)
 (deps (:inputs  Relude_Tuple.ast)  (include Relude_Tuple.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tuple.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.ast)
 (deps (:inputs  Relude_Option.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.d)
 (deps (:inputs  .././src/Relude_Option.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option.cmj Relude_Option.cmi Relude_Option.cmt Relude_Option.bs.js)
 (deps (:inputs  Relude_Option.ast)  (include Relude_Option.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Option.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.ast)
 (deps (:inputs  Relude_Result.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.d)
 (deps (:inputs  .././src/Relude_Result.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Result.cmj Relude_Result.cmi Relude_Result.cmt Relude_Result.bs.js)
 (deps (:inputs  Relude_Result.ast)  (include Relude_Result.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Result.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.ast)
 (deps (:inputs  Relude_StateT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.d)
 (deps (:inputs  .././src/Relude_StateT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StateT.cmj Relude_StateT.cmi Relude_StateT.cmt Relude_StateT.bs.js)
 (deps (:inputs  Relude_StateT.ast)  (include Relude_StateT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_StateT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.ast)
 (deps (:inputs  Relude_String.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.d)
 (deps (:inputs  .././src/Relude_String.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_String.cmj Relude_String.cmi Relude_String.cmt Relude_String.bs.js)
 (deps (:inputs  Relude_String.ast)  (include Relude_String.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_String.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.ast)
 (deps (:inputs  Relude_Tuple2.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.d)
 (deps (:inputs  .././src/Relude_Tuple2.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple2.cmj Relude_Tuple2.cmi Relude_Tuple2.cmt Relude_Tuple2.bs.js)
 (deps (:inputs  Relude_Tuple2.ast)  (include Relude_Tuple2.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tuple2.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.ast)
 (deps (:inputs  Relude_Tuple3.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.d)
 (deps (:inputs  .././src/Relude_Tuple3.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple3.cmj Relude_Tuple3.cmi Relude_Tuple3.cmt Relude_Tuple3.bs.js)
 (deps (:inputs  Relude_Tuple3.ast)  (include Relude_Tuple3.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tuple3.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.ast)
 (deps (:inputs  Relude_Tuple4.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.d)
 (deps (:inputs  .././src/Relude_Tuple4.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple4.cmj Relude_Tuple4.cmi Relude_Tuple4.cmt Relude_Tuple4.bs.js)
 (deps (:inputs  Relude_Tuple4.ast)  (include Relude_Tuple4.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tuple4.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.ast)
 (deps (:inputs  Relude_Tuple5.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.d)
 (deps (:inputs  .././src/Relude_Tuple5.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Tuple5.cmj Relude_Tuple5.cmi Relude_Tuple5.cmt Relude_Tuple5.bs.js)
 (deps (:inputs  Relude_Tuple5.ast)  (include Relude_Tuple5.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Tuple5.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.ast)
 (deps (:inputs  Relude_Unsafe.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.d)
 (deps (:inputs  .././src/Relude_Unsafe.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Unsafe.cmj Relude_Unsafe.cmi Relude_Unsafe.cmt Relude_Unsafe.bs.js)
 (deps (:inputs  Relude_Unsafe.ast)  (include Relude_Unsafe.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Unsafe.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.ast)
 (deps (:inputs  Relude_Decimal.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.d)
 (deps (:inputs  .././src/Relude_Decimal.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Decimal.cmj Relude_Decimal.cmi Relude_Decimal.cmt Relude_Decimal.bs.js)
 (deps (:inputs  Relude_Decimal.ast)  (include Relude_Decimal.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Decimal.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.ast)
 (deps (:inputs  Relude_Globals.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.d)
 (deps (:inputs  .././src/Relude_Globals.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Globals.cmj Relude_Globals.cmi Relude_Globals.cmt Relude_Globals.bs.js)
 (deps (:inputs  Relude_Globals.ast)  (include Relude_Globals.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Globals.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.ast)
 (deps (:inputs  Relude_OptionT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.d)
 (deps (:inputs  .././src/Relude_OptionT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_OptionT.cmj Relude_OptionT.cmi Relude_OptionT.cmt Relude_OptionT.bs.js)
 (deps (:inputs  Relude_OptionT.ast)  (include Relude_OptionT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_OptionT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.ast)
 (deps (:inputs  Relude_ReaderT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.d)
 (deps (:inputs  .././src/Relude_ReaderT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ReaderT.cmj Relude_ReaderT.cmi Relude_ReaderT.cmt Relude_ReaderT.bs.js)
 (deps (:inputs  Relude_ReaderT.ast)  (include Relude_ReaderT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_ReaderT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.ast)
 (deps (:inputs  Relude_ResultT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.d)
 (deps (:inputs  .././src/Relude_ResultT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ResultT.cmj Relude_ResultT.cmi Relude_ResultT.cmt Relude_ResultT.bs.js)
 (deps (:inputs  Relude_ResultT.ast)  (include Relude_ResultT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_ResultT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.ast)
 (deps (:inputs  Relude_WriterT.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.d)
 (deps (:inputs  .././src/Relude_WriterT.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_WriterT.cmj Relude_WriterT.cmi Relude_WriterT.cmt Relude_WriterT.bs.js)
 (deps (:inputs  Relude_WriterT.ast)  (include Relude_WriterT.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_WriterT.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.ast)
 (deps (:inputs  Relude_Debounce.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.d)
 (deps (:inputs  .././src/Relude_Debounce.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Debounce.cmj Relude_Debounce.cmi Relude_Debounce.cmt Relude_Debounce.bs.js)
 (deps (:inputs  Relude_Debounce.ast)  (include Relude_Debounce.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Debounce.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.ast)
 (deps (:inputs  Relude_Function.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.d)
 (deps (:inputs  .././src/Relude_Function.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Function.cmj Relude_Function.cmi Relude_Function.cmt Relude_Function.bs.js)
 (deps (:inputs  Relude_Function.ast)  (include Relude_Function.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Function.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.ast)
 (deps (:inputs  Relude_Identity.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.d)
 (deps (:inputs  .././src/Relude_Identity.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Identity.cmj Relude_Identity.cmi Relude_Identity.cmt Relude_Identity.bs.js)
 (deps (:inputs  Relude_Identity.ast)  (include Relude_Identity.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Identity.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.ast)
 (deps (:inputs  Relude_NonEmpty.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.d)
 (deps (:inputs  .././src/Relude_NonEmpty.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_NonEmpty.cmj Relude_NonEmpty.cmi Relude_NonEmpty.cmt Relude_NonEmpty.bs.js)
 (deps (:inputs  Relude_NonEmpty.ast)  (include Relude_NonEmpty.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_NonEmpty.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.ast)
 (deps (:inputs  Relude_Ordering.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.d)
 (deps (:inputs  .././src/Relude_Ordering.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ordering.cmj Relude_Ordering.cmi Relude_Ordering.cmt Relude_Ordering.bs.js)
 (deps (:inputs  Relude_Ordering.ast)  (include Relude_Ordering.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Ordering.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.ast)
 (deps (:inputs  Relude_Sequence.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.d)
 (deps (:inputs  .././src/Relude_Sequence.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Sequence.cmj Relude_Sequence.cmi Relude_Sequence.cmt Relude_Sequence.bs.js)
 (deps (:inputs  Relude_Sequence.ast)  (include Relude_Sequence.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Sequence.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.ast)
 (deps (:inputs  Relude_Throttle.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.d)
 (deps (:inputs  .././src/Relude_Throttle.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Throttle.cmj Relude_Throttle.cmi Relude_Throttle.cmt Relude_Throttle.bs.js)
 (deps (:inputs  Relude_Throttle.ast)  (include Relude_Throttle.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Throttle.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.ast)
 (deps (:inputs  Relude_AsyncData.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.d)
 (deps (:inputs  .././src/Relude_AsyncData.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncData.cmj Relude_AsyncData.cmi Relude_AsyncData.cmt Relude_AsyncData.bs.js)
 (deps (:inputs  Relude_AsyncData.ast)  (include Relude_AsyncData.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_AsyncData.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.ast)
 (deps (:inputs  Relude_Interface.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.d)
 (deps (:inputs  .././src/Relude_Interface.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Interface.cmj Relude_Interface.cmi Relude_Interface.cmt Relude_Interface.bs.js)
 (deps (:inputs  Relude_Interface.ast)  (include Relude_Interface.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Interface.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.ast)
 (deps (:inputs  Relude_StringMap.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.d)
 (deps (:inputs  .././src/Relude_StringMap.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_StringMap.cmj Relude_StringMap.cmi Relude_StringMap.cmt Relude_StringMap.bs.js)
 (deps (:inputs  Relude_StringMap.ast)  (include Relude_StringMap.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_StringMap.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.ast)
 (deps (:inputs  Relude_Free_Monad.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.d)
 (deps (:inputs  .././src/Relude_Free_Monad.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Monad.cmj Relude_Free_Monad.cmi Relude_Free_Monad.cmt Relude_Free_Monad.bs.js)
 (deps (:inputs  Relude_Free_Monad.ast)  (include Relude_Free_Monad.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Free_Monad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.ast)
 (deps (:inputs  Relude_ListZipper.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.d)
 (deps (:inputs  .././src/Relude_ListZipper.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ListZipper.cmj Relude_ListZipper.cmi Relude_ListZipper.cmt Relude_ListZipper.bs.js)
 (deps (:inputs  Relude_ListZipper.ast)  (include Relude_ListZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_ListZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.ast)
 (deps (:inputs  Relude_TreeZipper.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.d)
 (deps (:inputs  .././src/Relude_TreeZipper.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_TreeZipper.cmj Relude_TreeZipper.cmi Relude_TreeZipper.cmt Relude_TreeZipper.bs.js)
 (deps (:inputs  Relude_TreeZipper.ast)  (include Relude_TreeZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_TreeZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.ast)
 (deps (:inputs  Relude_Validation.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.d)
 (deps (:inputs  .././src/Relude_Validation.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Validation.cmj Relude_Validation.cmi Relude_Validation.cmt Relude_Validation.bs.js)
 (deps (:inputs  Relude_Validation.ast)  (include Relude_Validation.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Validation.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.ast)
 (deps (:inputs  Relude_ArrayZipper.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.d)
 (deps (:inputs  .././src/Relude_ArrayZipper.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_ArrayZipper.cmj Relude_ArrayZipper.cmi Relude_ArrayZipper.cmt Relude_ArrayZipper.bs.js)
 (deps (:inputs  Relude_ArrayZipper.ast)  (include Relude_ArrayZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_ArrayZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.ast)
 (deps (:inputs  Relude_AsyncResult.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.d)
 (deps (:inputs  .././src/Relude_AsyncResult.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_AsyncResult.cmj Relude_AsyncResult.cmi Relude_AsyncResult.cmt Relude_AsyncResult.bs.js)
 (deps (:inputs  Relude_AsyncResult.ast)  (include Relude_AsyncResult.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_AsyncResult.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.ast)
 (deps (:inputs  Relude_SequenceZipper.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.d)
 (deps (:inputs  .././src/Relude_SequenceZipper.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_SequenceZipper.cmj Relude_SequenceZipper.cmi Relude_SequenceZipper.cmt Relude_SequenceZipper.bs.js)
 (deps (:inputs  Relude_SequenceZipper.ast)  (include Relude_SequenceZipper.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_SequenceZipper.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.ast)
 (deps (:inputs  Relude_Free_Applicative.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.d)
 (deps (:inputs  .././src/Relude_Free_Applicative.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Free_Applicative.cmj Relude_Free_Applicative.cmi Relude_Free_Applicative.cmt Relude_Free_Applicative.bs.js)
 (deps (:inputs  Relude_Free_Applicative.ast)  (include Relude_Free_Applicative.d) ../bsconfig.json(alias ../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../bisect_ppx/src/common/bsb_world)(alias ../../bs-bastet/bastet_js/src/bsb_world)(alias ../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ./array -I ./extensions -I ./ior -I ./js -I ./list -I ./option -I . -I ../../bisect_ppx/.melange.eobjs -I ../../bisect_ppx/src/runtime/js -I ../../bisect_ppx/src/common -I ../../bs-bastet/.melange.eobjs -I ../../bs-bastet/bastet_js/src -I ../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src:.bs.js -o Relude_Free_Applicative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Free_Applicative.bs.js Relude_SequenceZipper.bs.js Relude_AsyncResult.bs.js Relude_ArrayZipper.bs.js Relude_Validation.bs.js Relude_TreeZipper.bs.js Relude_ListZipper.bs.js Relude_Free_Monad.bs.js Relude_StringMap.bs.js Relude_Interface.bs.js Relude_AsyncData.bs.js Relude_Throttle.bs.js Relude_Sequence.bs.js Relude_Ordering.bs.js Relude_NonEmpty.bs.js Relude_Identity.bs.js Relude_Function.bs.js Relude_Debounce.bs.js Relude_WriterT.bs.js Relude_ResultT.bs.js Relude_ReaderT.bs.js Relude_OptionT.bs.js Relude_Globals.bs.js Relude_Decimal.bs.js Relude_Unsafe.bs.js Relude_Tuple5.bs.js Relude_Tuple4.bs.js Relude_Tuple3.bs.js Relude_Tuple2.bs.js Relude_String.bs.js Relude_StateT.bs.js Relude_Result.bs.js Relude_Option.bs.js Relude_Tuple.bs.js Relude_Timer.bs.js Relude_HList.bs.js Relude_Float.bs.js Relude_ContT.bs.js Relude_Array.bs.js Relude_Void.bs.js Relude_Unit.bs.js Relude_Tree.bs.js Relude_RWST.bs.js Relude_List.bs.js Relude_HMap.bs.js Relude_Free.bs.js Relude_Bool.bs.js Relude_Set.bs.js Relude_RIO.bs.js Relude_Ord.bs.js Relude_Map.bs.js Relude_Ior.bs.js Relude_Int.bs.js Relude_IO.bs.js Relude_Eq.bs.js Relude.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/option
(rule
(targets  Relude_Option_Base.ast)
 (deps (:inputs  Relude_Option_Base.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Base.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Base.ast) )
(action (run meldep -cwd ./src/option -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Base.cmj Relude_Option_Base.cmi Relude_Option_Base.cmt Relude_Option_Base.bs.js)
 (deps (:inputs  Relude_Option_Base.ast)  (include Relude_Option_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I ../list -I . -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/option:.bs.js -o Relude_Option_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.ast)
 (deps (:inputs  Relude_Option_Instances.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Instances.ast) )
(action (run meldep -cwd ./src/option -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Instances.cmj Relude_Option_Instances.cmi Relude_Option_Instances.cmt Relude_Option_Instances.bs.js)
 (deps (:inputs  Relude_Option_Instances.ast)  (include Relude_Option_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I ../list -I . -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/option:.bs.js -o Relude_Option_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.ast)
 (deps (:inputs  Relude_Option_Specializations.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.d)
 (deps (:inputs  ../.././src/option/Relude_Option_Specializations.ast) )
(action (run meldep -cwd ./src/option -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Option_Specializations.cmj Relude_Option_Specializations.cmi Relude_Option_Specializations.cmt Relude_Option_Specializations.bs.js)
 (deps (:inputs  Relude_Option_Specializations.ast)  (include Relude_Option_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I ../list -I . -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/option:.bs.js -o Relude_Option_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Option_Specializations.bs.js Relude_Option_Instances.bs.js Relude_Option_Base.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/list
(rule
(targets  Relude_List_Base.ast)
 (deps (:inputs  Relude_List_Base.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Base.d)
 (deps (:inputs  ../.././src/list/Relude_List_Base.ast) )
(action (run meldep -cwd ./src/list -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Base.cmj Relude_List_Base.cmi Relude_List_Base.cmt Relude_List_Base.bs.js)
 (deps (:inputs  Relude_List_Base.ast)  (include Relude_List_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I . -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/list:.bs.js -o Relude_List_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.ast)
 (deps (:inputs  Relude_List_Instances.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.d)
 (deps (:inputs  ../.././src/list/Relude_List_Instances.ast) )
(action (run meldep -cwd ./src/list -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Instances.cmj Relude_List_Instances.cmi Relude_List_Instances.cmt Relude_List_Instances.bs.js)
 (deps (:inputs  Relude_List_Instances.ast)  (include Relude_List_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I . -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/list:.bs.js -o Relude_List_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.ast)
 (deps (:inputs  Relude_List_Specializations.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.d)
 (deps (:inputs  ../.././src/list/Relude_List_Specializations.ast) )
(action (run meldep -cwd ./src/list -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_List_Specializations.cmj Relude_List_Specializations.cmi Relude_List_Specializations.cmt Relude_List_Specializations.bs.js)
 (deps (:inputs  Relude_List_Specializations.ast)  (include Relude_List_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I ../js -I . -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/list:.bs.js -o Relude_List_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_List_Specializations.bs.js Relude_List_Instances.bs.js Relude_List_Base.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/js
(rule
(targets  Relude_Js.ast)
 (deps (:inputs  Relude_Js.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js.d)
 (deps (:inputs  ../.././src/js/Relude_Js.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js.cmj Relude_Js.cmi Relude_Js.cmt Relude_Js.bs.js)
 (deps (:inputs  Relude_Js.ast)  (include Relude_Js.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.ast)
 (deps (:inputs  Relude_Js_Exn.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Exn.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Exn.cmj Relude_Js_Exn.cmi Relude_Js_Exn.cmt Relude_Js_Exn.bs.js)
 (deps (:inputs  Relude_Js_Exn.ast)  (include Relude_Js_Exn.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js_Exn.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.ast)
 (deps (:inputs  Relude_Js_Json.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Json.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Json.cmj Relude_Js_Json.cmi Relude_Js_Json.cmt Relude_Js_Json.bs.js)
 (deps (:inputs  Relude_Js_Json.ast)  (include Relude_Js_Json.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js_Json.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.ast)
 (deps (:inputs  Relude_Js_Console.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Console.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Console.cmj Relude_Js_Console.cmi Relude_Js_Console.cmt Relude_Js_Console.bs.js)
 (deps (:inputs  Relude_Js_Console.ast)  (include Relude_Js_Console.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js_Console.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.ast)
 (deps (:inputs  Relude_Js_Promise.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Promise.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Promise.cmj Relude_Js_Promise.cmi Relude_Js_Promise.cmt Relude_Js_Promise.bs.js)
 (deps (:inputs  Relude_Js_Promise.ast)  (include Relude_Js_Promise.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js_Promise.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.ast)
 (deps (:inputs  Relude_Js_Animation.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.d)
 (deps (:inputs  ../.././src/js/Relude_Js_Animation.ast) )
(action (run meldep -cwd ./src/js -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Js_Animation.cmj Relude_Js_Animation.cmi Relude_Js_Animation.cmt Relude_Js_Animation.bs.js)
 (deps (:inputs  Relude_Js_Animation.ast)  (include Relude_Js_Animation.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I ../ior -I . -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/js:.bs.js -o Relude_Js_Animation.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Js_Animation.bs.js Relude_Js_Promise.bs.js Relude_Js_Console.bs.js Relude_Js_Json.bs.js Relude_Js_Exn.bs.js Relude_Js.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/ior
(rule
(targets  Relude_Ior_Type.ast)
 (deps (:inputs  Relude_Ior_Type.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior_Type.d)
 (deps (:inputs  ../.././src/ior/Relude_Ior_Type.ast) )
(action (run meldep -cwd ./src/ior -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Ior_Type.cmj Relude_Ior_Type.cmi Relude_Ior_Type.cmt Relude_Ior_Type.bs.js)
 (deps (:inputs  Relude_Ior_Type.ast)  (include Relude_Ior_Type.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I ../extensions -I . -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/ior:.bs.js -o Relude_Ior_Type.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Ior_Type.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/extensions
(rule
(targets  Relude_Extensions.ast)
 (deps (:inputs  Relude_Extensions.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions.cmj Relude_Extensions.cmi Relude_Extensions.cmt Relude_Extensions.bs.js)
 (deps (:inputs  Relude_Extensions.ast)  (include Relude_Extensions.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.ast)
 (deps (:inputs  Relude_Extensions_Eq.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Eq.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Eq.cmj Relude_Extensions_Eq.cmi Relude_Extensions_Eq.cmt Relude_Extensions_Eq.bs.js)
 (deps (:inputs  Relude_Extensions_Eq.ast)  (include Relude_Extensions_Eq.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Eq.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.ast)
 (deps (:inputs  Relude_Extensions_Alt.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Alt.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alt.cmj Relude_Extensions_Alt.cmi Relude_Extensions_Alt.cmt Relude_Extensions_Alt.bs.js)
 (deps (:inputs  Relude_Extensions_Alt.ast)  (include Relude_Extensions_Alt.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Alt.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.ast)
 (deps (:inputs  Relude_Extensions_Ord.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Ord.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ord.cmj Relude_Extensions_Ord.cmi Relude_Extensions_Ord.cmt Relude_Extensions_Ord.bs.js)
 (deps (:inputs  Relude_Extensions_Ord.ast)  (include Relude_Extensions_Ord.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Ord.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.ast)
 (deps (:inputs  Relude_Extensions_Enum.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Enum.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Enum.cmj Relude_Extensions_Enum.cmi Relude_Extensions_Enum.cmt Relude_Extensions_Enum.bs.js)
 (deps (:inputs  Relude_Extensions_Enum.ast)  (include Relude_Extensions_Enum.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Enum.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.ast)
 (deps (:inputs  Relude_Extensions_Plus.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Plus.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Plus.cmj Relude_Extensions_Plus.cmi Relude_Extensions_Plus.cmt Relude_Extensions_Plus.bs.js)
 (deps (:inputs  Relude_Extensions_Plus.ast)  (include Relude_Extensions_Plus.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Plus.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.ast)
 (deps (:inputs  Relude_Extensions_Ring.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Ring.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Ring.cmj Relude_Extensions_Ring.cmi Relude_Extensions_Ring.cmt Relude_Extensions_Ring.bs.js)
 (deps (:inputs  Relude_Extensions_Ring.ast)  (include Relude_Extensions_Ring.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Ring.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.ast)
 (deps (:inputs  Relude_Extensions_Show.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Show.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Show.cmj Relude_Extensions_Show.cmi Relude_Extensions_Show.cmt Relude_Extensions_Show.bs.js)
 (deps (:inputs  Relude_Extensions_Show.ast)  (include Relude_Extensions_Show.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Show.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.ast)
 (deps (:inputs  Relude_Extensions_Align.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Align.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Align.cmj Relude_Extensions_Align.cmi Relude_Extensions_Align.cmt Relude_Extensions_Align.bs.js)
 (deps (:inputs  Relude_Extensions_Align.ast)  (include Relude_Extensions_Align.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Align.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.ast)
 (deps (:inputs  Relude_Extensions_Apply.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Apply.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Apply.cmj Relude_Extensions_Apply.cmi Relude_Extensions_Apply.cmt Relude_Extensions_Apply.bs.js)
 (deps (:inputs  Relude_Extensions_Apply.ast)  (include Relude_Extensions_Apply.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Apply.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.ast)
 (deps (:inputs  Relude_Extensions_Monad.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Monad.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monad.cmj Relude_Extensions_Monad.cmi Relude_Extensions_Monad.cmt Relude_Extensions_Monad.bs.js)
 (deps (:inputs  Relude_Extensions_Monad.ast)  (include Relude_Extensions_Monad.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Monad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.ast)
 (deps (:inputs  Relude_Extensions_Extend.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Extend.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Extend.cmj Relude_Extensions_Extend.cmi Relude_Extensions_Extend.cmt Relude_Extensions_Extend.bs.js)
 (deps (:inputs  Relude_Extensions_Extend.ast)  (include Relude_Extensions_Extend.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Extend.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.ast)
 (deps (:inputs  Relude_Extensions_Monoid.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Monoid.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Monoid.cmj Relude_Extensions_Monoid.cmi Relude_Extensions_Monoid.cmt Relude_Extensions_Monoid.bs.js)
 (deps (:inputs  Relude_Extensions_Monoid.ast)  (include Relude_Extensions_Monoid.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Monoid.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.ast)
 (deps (:inputs  Relude_Extensions_Bounded.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bounded.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bounded.cmj Relude_Extensions_Bounded.cmi Relude_Extensions_Bounded.cmt Relude_Extensions_Bounded.bs.js)
 (deps (:inputs  Relude_Extensions_Bounded.ast)  (include Relude_Extensions_Bounded.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Bounded.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.ast)
 (deps (:inputs  Relude_Extensions_Comonad.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Comonad.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Comonad.cmj Relude_Extensions_Comonad.cmi Relude_Extensions_Comonad.cmt Relude_Extensions_Comonad.bs.js)
 (deps (:inputs  Relude_Extensions_Comonad.ast)  (include Relude_Extensions_Comonad.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Comonad.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.ast)
 (deps (:inputs  Relude_Extensions_Functor.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Functor.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Functor.cmj Relude_Extensions_Functor.cmi Relude_Extensions_Functor.cmt Relude_Extensions_Functor.bs.js)
 (deps (:inputs  Relude_Extensions_Functor.ast)  (include Relude_Extensions_Functor.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Functor.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.ast)
 (deps (:inputs  Relude_Extensions_Foldable.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Foldable.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Foldable.cmj Relude_Extensions_Foldable.cmi Relude_Extensions_Foldable.cmt Relude_Extensions_Foldable.bs.js)
 (deps (:inputs  Relude_Extensions_Foldable.ast)  (include Relude_Extensions_Foldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Foldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.ast)
 (deps (:inputs  Relude_Extensions_Semiring.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semiring.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semiring.cmj Relude_Extensions_Semiring.cmi Relude_Extensions_Semiring.cmt Relude_Extensions_Semiring.bs.js)
 (deps (:inputs  Relude_Extensions_Semiring.ast)  (include Relude_Extensions_Semiring.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Semiring.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.ast)
 (deps (:inputs  Relude_Extensions_Bifunctor.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bifunctor.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifunctor.cmj Relude_Extensions_Bifunctor.cmi Relude_Extensions_Bifunctor.cmt Relude_Extensions_Bifunctor.bs.js)
 (deps (:inputs  Relude_Extensions_Bifunctor.ast)  (include Relude_Extensions_Bifunctor.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Bifunctor.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.ast)
 (deps (:inputs  Relude_Extensions_MonoidAny.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonoidAny.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonoidAny.cmj Relude_Extensions_MonoidAny.cmi Relude_Extensions_MonoidAny.cmt Relude_Extensions_MonoidAny.bs.js)
 (deps (:inputs  Relude_Extensions_MonoidAny.ast)  (include Relude_Extensions_MonoidAny.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_MonoidAny.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.ast)
 (deps (:inputs  Relude_Extensions_Semialign.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semialign.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semialign.cmj Relude_Extensions_Semialign.cmi Relude_Extensions_Semialign.cmt Relude_Extensions_Semialign.bs.js)
 (deps (:inputs  Relude_Extensions_Semialign.ast)  (include Relude_Extensions_Semialign.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Semialign.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.ast)
 (deps (:inputs  Relude_Extensions_Semigroup.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semigroup.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroup.cmj Relude_Extensions_Semigroup.cmi Relude_Extensions_Semigroup.cmt Relude_Extensions_Semigroup.bs.js)
 (deps (:inputs  Relude_Extensions_Semigroup.ast)  (include Relude_Extensions_Semigroup.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Semigroup.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.ast)
 (deps (:inputs  Relude_Extensions_Bifoldable.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bifoldable.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bifoldable.cmj Relude_Extensions_Bifoldable.cmi Relude_Extensions_Bifoldable.cmt Relude_Extensions_Bifoldable.bs.js)
 (deps (:inputs  Relude_Extensions_Bifoldable.ast)  (include Relude_Extensions_Bifoldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Bifoldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.ast)
 (deps (:inputs  Relude_Extensions_MonadError.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonadError.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadError.cmj Relude_Extensions_MonadError.cmi Relude_Extensions_MonadError.cmt Relude_Extensions_MonadError.bs.js)
 (deps (:inputs  Relude_Extensions_MonadError.ast)  (include Relude_Extensions_MonadError.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_MonadError.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.ast)
 (deps (:inputs  Relude_Extensions_MonadThrow.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_MonadThrow.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_MonadThrow.cmj Relude_Extensions_MonadThrow.cmi Relude_Extensions_MonadThrow.cmt Relude_Extensions_MonadThrow.bs.js)
 (deps (:inputs  Relude_Extensions_MonadThrow.ast)  (include Relude_Extensions_MonadThrow.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_MonadThrow.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.ast)
 (deps (:inputs  Relude_Extensions_Unfoldable.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Unfoldable.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Unfoldable.cmj Relude_Extensions_Unfoldable.cmi Relude_Extensions_Unfoldable.cmt Relude_Extensions_Unfoldable.bs.js)
 (deps (:inputs  Relude_Extensions_Unfoldable.ast)  (include Relude_Extensions_Unfoldable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Unfoldable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.ast)
 (deps (:inputs  Relude_Extensions_Alternative.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Alternative.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Alternative.cmj Relude_Extensions_Alternative.cmi Relude_Extensions_Alternative.cmt Relude_Extensions_Alternative.bs.js)
 (deps (:inputs  Relude_Extensions_Alternative.ast)  (include Relude_Extensions_Alternative.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Alternative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.ast)
 (deps (:inputs  Relude_Extensions_Applicative.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Applicative.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Applicative.cmj Relude_Extensions_Applicative.cmi Relude_Extensions_Applicative.cmt Relude_Extensions_Applicative.bs.js)
 (deps (:inputs  Relude_Extensions_Applicative.ast)  (include Relude_Extensions_Applicative.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Applicative.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.ast)
 (deps (:inputs  Relude_Extensions_BoundedEnum.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_BoundedEnum.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_BoundedEnum.cmj Relude_Extensions_BoundedEnum.cmi Relude_Extensions_BoundedEnum.cmt Relude_Extensions_BoundedEnum.bs.js)
 (deps (:inputs  Relude_Extensions_BoundedEnum.ast)  (include Relude_Extensions_BoundedEnum.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_BoundedEnum.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.ast)
 (deps (:inputs  Relude_Extensions_Traversable.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Traversable.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Traversable.cmj Relude_Extensions_Traversable.cmi Relude_Extensions_Traversable.cmt Relude_Extensions_Traversable.bs.js)
 (deps (:inputs  Relude_Extensions_Traversable.ast)  (include Relude_Extensions_Traversable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Traversable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.ast)
 (deps (:inputs  Relude_Extensions_SemigroupAny.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_SemigroupAny.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_SemigroupAny.cmj Relude_Extensions_SemigroupAny.cmi Relude_Extensions_SemigroupAny.cmt Relude_Extensions_SemigroupAny.bs.js)
 (deps (:inputs  Relude_Extensions_SemigroupAny.ast)  (include Relude_Extensions_SemigroupAny.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_SemigroupAny.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.ast)
 (deps (:inputs  Relude_Extensions_Semigroupoid.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Semigroupoid.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Semigroupoid.cmj Relude_Extensions_Semigroupoid.cmi Relude_Extensions_Semigroupoid.cmt Relude_Extensions_Semigroupoid.bs.js)
 (deps (:inputs  Relude_Extensions_Semigroupoid.ast)  (include Relude_Extensions_Semigroupoid.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Semigroupoid.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.ast)
 (deps (:inputs  Relude_Extensions_Bitraversable.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Bitraversable.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Bitraversable.cmj Relude_Extensions_Bitraversable.cmi Relude_Extensions_Bitraversable.cmt Relude_Extensions_Bitraversable.bs.js)
 (deps (:inputs  Relude_Extensions_Bitraversable.ast)  (include Relude_Extensions_Bitraversable.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Bitraversable.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.ast)
 (deps (:inputs  Relude_Extensions_Contravariant.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.d)
 (deps (:inputs  ../.././src/extensions/Relude_Extensions_Contravariant.ast) )
(action (run meldep -cwd ./src/extensions -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Extensions_Contravariant.cmj Relude_Extensions_Contravariant.cmi Relude_Extensions_Contravariant.cmt Relude_Extensions_Contravariant.bs.js)
 (deps (:inputs  Relude_Extensions_Contravariant.ast)  (include Relude_Extensions_Contravariant.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I ../array -I . -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/extensions:.bs.js -o Relude_Extensions_Contravariant.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Extensions_Contravariant.bs.js Relude_Extensions_Bitraversable.bs.js Relude_Extensions_Semigroupoid.bs.js Relude_Extensions_SemigroupAny.bs.js Relude_Extensions_Traversable.bs.js Relude_Extensions_BoundedEnum.bs.js Relude_Extensions_Applicative.bs.js Relude_Extensions_Alternative.bs.js Relude_Extensions_Unfoldable.bs.js Relude_Extensions_MonadThrow.bs.js Relude_Extensions_MonadError.bs.js Relude_Extensions_Bifoldable.bs.js Relude_Extensions_Semigroup.bs.js Relude_Extensions_Semialign.bs.js Relude_Extensions_MonoidAny.bs.js Relude_Extensions_Bifunctor.bs.js Relude_Extensions_Semiring.bs.js Relude_Extensions_Foldable.bs.js Relude_Extensions_Functor.bs.js Relude_Extensions_Comonad.bs.js Relude_Extensions_Bounded.bs.js Relude_Extensions_Monoid.bs.js Relude_Extensions_Extend.bs.js Relude_Extensions_Monad.bs.js Relude_Extensions_Apply.bs.js Relude_Extensions_Align.bs.js Relude_Extensions_Show.bs.js Relude_Extensions_Ring.bs.js Relude_Extensions_Plus.bs.js Relude_Extensions_Enum.bs.js Relude_Extensions_Ord.bs.js Relude_Extensions_Alt.bs.js Relude_Extensions_Eq.bs.js Relude_Extensions.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./node_modules/relude/src/array
(rule
(targets  Relude_Array_Base.ast)
 (deps (:inputs  Relude_Array_Base.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Base.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Base.ast) )
(action (run meldep -cwd ./src/array -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Base.cmj Relude_Array_Base.cmi Relude_Array_Base.cmt Relude_Array_Base.bs.js)
 (deps (:inputs  Relude_Array_Base.ast)  (include Relude_Array_Base.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I . -I ../extensions -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/array:.bs.js -o Relude_Array_Base.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.ast)
 (deps (:inputs  Relude_Array_Instances.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Instances.ast) )
(action (run meldep -cwd ./src/array -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Instances.cmj Relude_Array_Instances.cmi Relude_Array_Instances.cmt Relude_Array_Instances.bs.js)
 (deps (:inputs  Relude_Array_Instances.ast)  (include Relude_Array_Instances.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I . -I ../extensions -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/array:.bs.js -o Relude_Array_Instances.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.ast)
 (deps (:inputs  Relude_Array_Specializations.re) )
(action
 (run melc  -w a -ppx "/mnt/c/git/hackerrank-melange/node_modules/bisect_ppx/ppx --exclude-files .*_test\\.re$$ --exclude-files .*\\/testUtils\\/.*\\.re$$" -bs-no-version-header -bs-super-errors -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.d)
 (deps (:inputs  ../.././src/array/Relude_Array_Specializations.ast) )
(action (run meldep -cwd ./src/array -root /mnt/c/git/hackerrank-melange/node_modules/relude  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Relude_Array_Specializations.cmj Relude_Array_Specializations.cmi Relude_Array_Specializations.cmt Relude_Array_Specializations.bs.js)
 (deps (:inputs  Relude_Array_Specializations.ast)  (include Relude_Array_Specializations.d) ../../bsconfig.json(alias ../../../bisect_ppx/src/runtime/js/bsb_world)(alias ../../../bisect_ppx/src/common/bsb_world)(alias ../../../bs-bastet/bastet_js/src/bsb_world)(alias ../../../bs-bastet/bastet/src/bsb_world))
(action
  (run melc -bs-re-out -I . -I ../extensions -I ../ior -I ../js -I ../list -I ../option -I .. -I ../../../bisect_ppx/.melange.eobjs -I ../../../bisect_ppx/src/runtime/js -I ../../../bisect_ppx/src/common -I ../../../bs-bastet/.melange.eobjs -I ../../../bs-bastet/bastet_js/src -I ../../../bs-bastet/bastet/src   -w a -bs-package-name relude -bs-package-output es6:./src/array:.bs.js -o Relude_Array_Specializations.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Relude_Array_Specializations.bs.js Relude_Array_Instances.bs.js Relude_Array_Base.bs.js)
(enabled_if %{bin-available:melc})))


(subdir ./node_modules/relude(data_only_dirs .melange.eobjs))
(subdir ./node_modules/relude/.melange.eobjs)

(subdir ./src
(dirs :standard utils)
(rule
(targets  Main.ast)
 (deps (:inputs  Main.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Main.d)
 (deps (:inputs  .././src/Main.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Main.cmj Main.cmi Main.cmt Main.bs.js)
 (deps (:inputs  Main.ast)  (include Main.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o Main.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Hello.ast)
 (deps (:inputs  Hello.ml) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Hello.d)
 (deps (:inputs  .././src/Hello.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Hello.cmj Hello.cmi Hello.cmt Hello.bs.js)
 (deps (:inputs  Hello.ast)  (include Hello.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o Hello.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  AVeryBigSum.ast)
 (deps (:inputs  AVeryBigSum.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  AVeryBigSum.d)
 (deps (:inputs  .././src/AVeryBigSum.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  AVeryBigSum.cmj AVeryBigSum.cmi AVeryBigSum.cmt AVeryBigSum.bs.js)
 (deps (:inputs  AVeryBigSum.ast)  (include AVeryBigSum.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o AVeryBigSum.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CompareTheTriplets.ast)
 (deps (:inputs  CompareTheTriplets.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CompareTheTriplets.d)
 (deps (:inputs  .././src/CompareTheTriplets.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  CompareTheTriplets.cmj CompareTheTriplets.cmi CompareTheTriplets.cmt CompareTheTriplets.bs.js)
 (deps (:inputs  CompareTheTriplets.ast)  (include CompareTheTriplets.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o CompareTheTriplets.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DiagonalDifference.ast)
 (deps (:inputs  DiagonalDifference.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DiagonalDifference.d)
 (deps (:inputs  .././src/DiagonalDifference.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  DiagonalDifference.cmj DiagonalDifference.cmi DiagonalDifference.cmt DiagonalDifference.bs.js)
 (deps (:inputs  DiagonalDifference.ast)  (include DiagonalDifference.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o DiagonalDifference.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  StringInterpolation.ast)
 (deps (:inputs  StringInterpolation.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  StringInterpolation.d)
 (deps (:inputs  .././src/StringInterpolation.ast) )
(action (run meldep -cwd ./src -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  StringInterpolation.cmj StringInterpolation.cmi StringInterpolation.cmt StringInterpolation.bs.js)
 (deps (:inputs  StringInterpolation.ast)  (include StringInterpolation.d) ../bsconfig.json(alias ../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../node_modules/relude/src/bsb_world)(alias ../node_modules/relude/src/option/bsb_world)(alias ../node_modules/relude/src/list/bsb_world)(alias ../node_modules/relude/src/js/bsb_world)(alias ../node_modules/relude/src/ior/bsb_world)(alias ../node_modules/relude/src/extensions/bsb_world)(alias ../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I ./utils -I . -I ../node_modules/bs-bastet/.melange.eobjs -I ../node_modules/bs-bastet/bastet_js/src -I ../node_modules/bs-bastet/bastet/src -I ../node_modules/relude/src -I ../node_modules/relude/src/option -I ../node_modules/relude/src/list -I ../node_modules/relude/src/js -I ../node_modules/relude/src/ior -I ../node_modules/relude/src/extensions -I ../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src:.bs.js -o StringInterpolation.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  StringInterpolation.bs.js DiagonalDifference.bs.js CompareTheTriplets.bs.js AVeryBigSum.bs.js Hello.bs.js Main.bs.js)
(enabled_if %{bin-available:melc})))
(subdir ./src/utils
(rule
(targets  Trelude.ast)
 (deps (:inputs  Trelude.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Trelude.d)
 (deps (:inputs  ../.././src/utils/Trelude.ast) )
(action (run meldep -cwd ./src/utils -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Trelude.cmj Trelude.cmi Trelude.cmt Trelude.bs.js)
 (deps (:inputs  Trelude.ast)  (include Trelude.d) ../../bsconfig.json(alias ../../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../../node_modules/relude/src/bsb_world)(alias ../../node_modules/relude/src/option/bsb_world)(alias ../../node_modules/relude/src/list/bsb_world)(alias ../../node_modules/relude/src/js/bsb_world)(alias ../../node_modules/relude/src/ior/bsb_world)(alias ../../node_modules/relude/src/extensions/bsb_world)(alias ../../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I . -I .. -I ../../node_modules/bs-bastet/.melange.eobjs -I ../../node_modules/bs-bastet/bastet_js/src -I ../../node_modules/bs-bastet/bastet/src -I ../../node_modules/relude/src -I ../../node_modules/relude/src/option -I ../../node_modules/relude/src/list -I ../../node_modules/relude/src/js -I ../../node_modules/relude/src/ior -I ../../node_modules/relude/src/extensions -I ../../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src/utils:.bs.js -o Trelude.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Readline.ast)
 (deps (:inputs  Readline.re) )
(action
 (run melc  -w a  -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Readline.d)
 (deps (:inputs  ../.././src/utils/Readline.ast) )
(action (run meldep -cwd ./src/utils -root /mnt/c/git/hackerrank-melange  %{inputs}))
(enabled_if %{bin-available:melc}) )
 (rule
(targets  Readline.cmj Readline.cmi Readline.cmt Readline.bs.js)
 (deps (:inputs  Readline.ast)  (include Readline.d) ../../bsconfig.json(alias ../../node_modules/bs-bastet/bastet_js/src/bsb_world)(alias ../../node_modules/bs-bastet/bastet/src/bsb_world)(alias ../../node_modules/relude/src/bsb_world)(alias ../../node_modules/relude/src/option/bsb_world)(alias ../../node_modules/relude/src/list/bsb_world)(alias ../../node_modules/relude/src/js/bsb_world)(alias ../../node_modules/relude/src/ior/bsb_world)(alias ../../node_modules/relude/src/extensions/bsb_world)(alias ../../node_modules/relude/src/array/bsb_world))
(action
  (run melc -bs-re-out -I . -I .. -I ../../node_modules/bs-bastet/.melange.eobjs -I ../../node_modules/bs-bastet/bastet_js/src -I ../../node_modules/bs-bastet/bastet/src -I ../../node_modules/relude/src -I ../../node_modules/relude/src/option -I ../../node_modules/relude/src/list -I ../../node_modules/relude/src/js -I ../../node_modules/relude/src/ior -I ../../node_modules/relude/src/extensions -I ../../node_modules/relude/src/array   -w a -bs-package-name melange-basic-project -bs-package-output es6:./src/utils:.bs.js -o Readline.cmj %{inputs}))
(enabled_if %{bin-available:melc}) )
 
(alias (name bsb_world)(deps  Readline.bs.js Trelude.bs.js)
(enabled_if %{bin-available:melc})))


(subdir .melange.eobjs)

(data_only_dirs node_modules .melange.eobjs)
(alias (name bsb_world))
;;;;BSB GENERATED: NO EDIT}
